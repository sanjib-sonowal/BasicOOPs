//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFConsoleApp.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Collections.Generic;

    public partial class EmployeeDBEntities : DbContext
    {
        public EmployeeDBEntities()
            : base("name=EmployeeDBEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;

            //Database.SetInitializer<EmployeeDBEntities>(new UniDBInitializer<EmployeeDBEntities>());
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<Employee> Employees { get; set; }

        public virtual int UpdateEmployee(string number)
        {
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployee", numberParameter);
        }

        /* SEED DB */
        /*
        private class UniDBInitializer<T> : DropCreateDatabaseAlways<EmployeeDBEntities>
        {
            protected override void Seed(EmployeeDBEntities context)
            {
                IList<Employee> employees = new List<Employee>();

                employees.Add(new Employee()
                {
                    Name = "Andrew",
                    JobDescription = "Manager",
                    Number = "101"
                });

                employees.Add(new Employee()
                {
                    Name = "Brice",
                    JobDescription = "Tech Lead",
                    Number = "102"
                });

                foreach (Employee employee in employees)
                    context.Employees.Add(employee);
                base.Seed(context);
            }
        }
        */
    }
}
